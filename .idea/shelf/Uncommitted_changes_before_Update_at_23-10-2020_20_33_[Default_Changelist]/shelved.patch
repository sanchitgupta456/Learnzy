Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.sanchit.Upsilon\">\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n        <activity\r\n            android:name=\"com.sanchit.Upsilon.ui.login.LoginActivity\"\r\n            android:label=\"Upsilon\">\r\n\r\n        </activity>\r\n        <activity android:name=\"com.sanchit.Upsilon.MainActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\"com.sanchit.Upsilon.ui.login.SignUpActivity\"></activity>\r\n        <activity android:name=\"com.sanchit.Upsilon.SearchActivity\"></activity>\r\n        <activity android:name=\".UserDataSetupActivity1\"></activity>\r\n        <activity android:name=\".UserDataSetupActivity2\"></activity>\r\n        <activity android:name=\".UserDataSetupActivity3\"></activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 126fec3dbd7adfcfff0050d22ef339341d14c6a9)
+++ app/src/main/AndroidManifest.xml	(date 1603452714708)
@@ -2,14 +2,19 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.sanchit.Upsilon">
     <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
 
     <application
         android:allowBackup="true"
+        android:requestLegacyExternalStorage="true"
         android:icon="@mipmap/ic_launcher"
         android:label="@string/app_name"
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
-        android:theme="@style/AppTheme">
+        android:theme="@style/AppTheme"
+        >
+        <meta-data android:name="cloudinary://937567483347128:wQLZU0pYv4hJt1sqF9fHB1uuEs8@upsilon175" android:value="cloudinary://@upsilon175"/>
         <activity
             android:name="com.sanchit.Upsilon.ui.login.LoginActivity"
             android:label="Upsilon">
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'realm-android'\r\n\r\nandroid {\r\n    compileSdkVersion 29\r\n    buildToolsVersion \"29.0.3\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.sanchit.Upsilon\"\r\n        minSdkVersion 23\r\n        targetSdkVersion 29\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    compileOptions{\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\nrealm {\r\n    syncEnabled = true\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.1.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation 'androidx.annotation:annotation:1.1.0'\r\n    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.android.gms:play-services-auth:18.0.0'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.1'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'\r\n\r\n    //recycler view\r\n    implementation 'com.android.support:recyclerview-v7:29.0.3'\r\n\r\n    //...\r\n    implementation 'com.android.support:design:29.0.3'\r\n\r\n    //...\r\n    implementation 'com.google.android.material:material:1.2.0-alpha04'\r\n\r\n    //card view\r\n    implementation 'com.android.support:cardview-v7:29.0.3'\r\n\r\n    //image loader\r\n    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'\r\n\r\n    //circular image view\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 126fec3dbd7adfcfff0050d22ef339341d14c6a9)
+++ app/build.gradle	(date 1603450378143)
@@ -63,4 +63,7 @@
     //circular image view
     implementation 'de.hdodenhof:circleimageview:3.1.0'
 
+    //Cloudinary api
+    implementation group: 'com.cloudinary', name: 'cloudinary-android', version: '1.30.0'
+
 }
\ No newline at end of file
Index: app/src/main/java/com/sanchit/Upsilon/UserDataSetupActivity2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sanchit.Upsilon;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport org.bson.Document;\r\n\r\nimport io.realm.mongodb.App;\r\nimport io.realm.mongodb.AppConfiguration;\r\nimport io.realm.mongodb.RealmResultTask;\r\nimport io.realm.mongodb.User;\r\nimport io.realm.mongodb.mongo.MongoClient;\r\nimport io.realm.mongodb.mongo.MongoCollection;\r\nimport io.realm.mongodb.mongo.MongoDatabase;\r\nimport io.realm.mongodb.mongo.iterable.MongoCursor;\r\n\r\npublic class UserDataSetupActivity2 extends AppCompatActivity {\r\n\r\n    String appID = \"upsilon-ityvn\";\r\n    Button nextButton;\r\n    EditText Name;\r\n    String name;\r\n    int flag=0;\r\n    App app;\r\n    User user;\r\n    MongoClient mongoClient;\r\n    MongoDatabase mongoDatabase;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_setup_2);\r\n\r\n        nextButton = (Button) findViewById(R.id.selectLaterNext2);\r\n        Name = (EditText) findViewById(R.id.userNameHolder);\r\n\r\n        app = new App(new AppConfiguration.Builder(appID)\r\n                .build());\r\n        User user = app.currentUser();\r\n\r\n        nextButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if(flag==1)\r\n                {\r\n                    name = Name.getText().toString();\r\n                    mongoClient = user.getMongoClient(\"mongodb-atlas\");\r\n                    mongoDatabase = mongoClient.getDatabase(\"Upsilon\");\r\n                    MongoCollection<Document> mongoCollection  = mongoDatabase.getCollection(\"UserData\");\r\n\r\n                    //Blank query to find every single course in db\r\n                    //TODO: Modify query to look for user preferred course IDs\r\n                    Document queryFilter  = new Document(\"userid\",user.getId());\r\n\r\n                    RealmResultTask<MongoCursor<Document>> findTask = mongoCollection.find(queryFilter).iterator();\r\n\r\n                    findTask.getAsync(task -> {\r\n                        if (task.isSuccess()) {\r\n                            MongoCursor<Document> results = task.get();\r\n                            if(!results.hasNext())\r\n                            {\r\n                                mongoCollection.insertOne(\r\n                                        new Document(\"userid\", user.getId()).append(\"favoriteColor\", \"pink\"))\r\n                                        .getAsync(result -> {\r\n                                            if (result.isSuccess()) {\r\n                                                Log.v(\"EXAMPLE\", \"Inserted custom user data document. _id of inserted document: \"\r\n                                                        + result.get().getInsertedId());\r\n                                            } else {\r\n                                                Log.e(\"EXAMPLE\", \"Unable to insert custom user data. Error: \" + result.getError());\r\n                                            }\r\n                                        });\r\n                            }\r\n                            else\r\n                            {\r\n                                Document userdata = results.next();\r\n                                userdata.append(\"name\",name);\r\n\r\n                                mongoCollection.updateOne(\r\n                                        new Document(\"userid\", user.getId()),(userdata))\r\n                                        .getAsync(result -> {\r\n                                            if (result.isSuccess()) {\r\n                                                Log.v(\"EXAMPLE\", \"Inserted custom user data document. _id of inserted document: \"\r\n                                                        + result.get().getModifiedCount());\r\n                                            } else {\r\n                                                Log.e(\"EXAMPLE\", \"Unable to insert custom user data. Error: \" + result.getError());\r\n                                            }\r\n                                        });\r\n                            }\r\n                            while (results.hasNext()) {\r\n                                //Log.v(\"EXAMPLE\", results.next().toString());\r\n                                Document currentDoc = results.next();\r\n                                Log.v(\"User\",currentDoc.getString(\"userid\"));\r\n                            }\r\n                        } else {\r\n                            Log.v(\"User\",\"Failed to complete search\");\r\n                        }\r\n                    });\r\n                }\r\n                Intent intent = new Intent(UserDataSetupActivity2.this,UserDataSetupActivity3.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        TextWatcher textWatcher = new TextWatcher() {\r\n\r\n            public void afterTextChanged(Editable s) {\r\n                nextButton.setText(\"Next\");\r\n                flag=1;\r\n            }\r\n\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n                nextButton.setText(\"Select Later\");\r\n            }\r\n\r\n            public void onTextChanged(CharSequence s, int start, int before,\r\n                                      int count) {\r\n            nextButton.setText(\"Next\");\r\n            flag=1;\r\n            }\r\n        };\r\n\r\n        Name.addTextChangedListener(textWatcher);\r\n\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/sanchit/Upsilon/UserDataSetupActivity2.java	(revision 126fec3dbd7adfcfff0050d22ef339341d14c6a9)
+++ app/src/main/java/com/sanchit/Upsilon/UserDataSetupActivity2.java	(date 1603453344634)
@@ -1,19 +1,36 @@
 package com.sanchit.Upsilon;
 
+import android.Manifest;
 import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.database.Cursor;
+import android.graphics.BitmapFactory;
+import android.net.Uri;
+import android.os.Build;
 import android.os.Bundle;
+import android.provider.MediaStore;
 import android.text.Editable;
 import android.text.TextWatcher;
 import android.util.Log;
 import android.view.View;
 import android.widget.Button;
 import android.widget.EditText;
+import android.widget.ImageView;
+import android.widget.Toast;
 
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
+import androidx.core.app.ActivityCompat;
+
+import com.cloudinary.android.MediaManager;
+import com.google.android.gms.common.internal.Constants;
 
 import org.bson.Document;
 
+import java.util.HashMap;
+import java.util.Map;
+
+import de.hdodenhof.circleimageview.CircleImageView;
 import io.realm.mongodb.App;
 import io.realm.mongodb.AppConfiguration;
 import io.realm.mongodb.RealmResultTask;
@@ -34,6 +51,10 @@
     User user;
     MongoClient mongoClient;
     MongoDatabase mongoDatabase;
+    CircleImageView profilepic;
+    String Profilepicpath;
+    private static int RESULT_LOAD_IMAGE = 1;
+    private static final int WRITE_PERMISSION = 0x01;
 
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {
@@ -42,11 +63,26 @@
 
         nextButton = (Button) findViewById(R.id.selectLaterNext2);
         Name = (EditText) findViewById(R.id.userNameHolder);
+        profilepic = (CircleImageView) findViewById(R.id.profilePhoto);
+        requestWritePermission();
 
         app = new App(new AppConfiguration.Builder(appID)
                 .build());
         User user = app.currentUser();
 
+        profilepic.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+               /* Intent intent = new Intent();
+                intent.setType("image/*");
+                intent.setAction(Intent.ACTION_GET_CONTENT);
+                startActivityForResult(Intent.createChooser(intent, "Select Picture"),1);*/
+                Intent i = new Intent(
+                        Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
+                startActivityForResult(i, RESULT_LOAD_IMAGE);
+            }
+        });
+
         nextButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -132,4 +168,78 @@
 
 
     }
+
+    // To handle when an image is selected from the browser, add the following to your Activity
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+
+        super.onActivityResult(requestCode, resultCode, data);
+        if (resultCode == RESULT_OK) {
+
+            /*if (requestCode == 1) {
+
+                // currImageURI is the global variable I'm using to hold the content:// URI of the image
+                Uri currImageURI = data.getData();
+                Bundle bundle = data.getExtras();
+                profilepic.setImageURI(currImageURI);
+                Profilepicpath = getRealPathFromURI(currImageURI);
+
+            }*/
+        if (requestCode == RESULT_LOAD_IMAGE && resultCode == RESULT_OK && null != data) {
+            Uri selectedImage = data.getData();
+            String[] filePathColumn = { MediaStore.Images.Media.DATA };
+            Cursor cursor = getContentResolver().query(selectedImage,
+                    filePathColumn, null, null, null);
+            cursor.moveToFirst();
+            int columnIndex = cursor.getColumnIndex(filePathColumn[0]);
+            String picturePath = cursor.getString(columnIndex);
+            cursor.close();
+            // String picturePath contains the path of selected Image
+            ImageView imageView = (ImageView) findViewById(R.id.profilePhoto);
+            imageView.setImageBitmap(BitmapFactory.decodeFile(picturePath));
+            Map config = new HashMap();
+            config.put("cloud_name", "upsilon175");
+            MediaManager.init(this, config);
+                String requestId = MediaManager.get().upload(picturePath)
+                        .unsigned("preset1")
+                        .option("resource_type", "image")
+                        .option("folder", "my_folder/my_sub_folder/")
+                        .option("public_id", "my_dog")
+                        .dispatch();
+        }
+        }
+    }
+
+    @Override
+    public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) {
+        if(requestCode == WRITE_PERMISSION){
+            if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+                Log.d("Hello", "Write Permission Failed");
+                Toast.makeText(this, "You must allow permission write external storage to your mobile device.", Toast.LENGTH_SHORT).show();
+                finish();
+            }
+        }
+    }
+
+    private void requestWritePermission(){
+        if(checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE)!=PackageManager.PERMISSION_GRANTED){
+            ActivityCompat.requestPermissions(this,new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},WRITE_PERMISSION);
+        }
+    }
+    // And to convert the image URI to the direct file system path of the image file
+    public String getRealPathFromURI(Uri contentUri) {
+
+        // can post image
+        String [] proj={MediaStore.Images.Media.DATA};
+        Cursor cursor = managedQuery( contentUri,
+                proj, // Which columns to return
+                null,       // WHERE clause; which rows to return (all rows)
+                null,       // WHERE clause selection arguments (none)
+                null); // Order-by clause (ascending by name)
+        int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
+        cursor.moveToFirst();
+
+        return cursor.getString(column_index);
+    }
+
 }
\ No newline at end of file
Index: .idea/dictionaries/Samarth.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/dictionaries/Samarth.xml	(date 1603449812640)
+++ .idea/dictionaries/Samarth.xml	(date 1603449812640)
@@ -0,0 +1,7 @@
+<component name="ProjectDictionaryState">
+  <dictionary name="Samarth">
+    <words>
+      <w>cloudinary</w>
+    </words>
+  </dictionary>
+</component>
\ No newline at end of file
